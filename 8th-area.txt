Write a C++ program with class name Shape containing the method area() and volume() and overload the area() function

#include <iostream> 
#include <cmath> 
 
class Shape { 
public: 
    // Method to calculate the area (for 2D shapes) 
    virtual double area() const { 
        return 0.0; // Default implementation for undefined shapes 
    } 
 
    // Method to calculate the volume (for 3D shapes) 
    virtual double volume() const { 
        return 0.0; // Default implementation for undefined shapes 
    } 
}; 
 
class Circle : public Shape { 
private: 
    double radius; 
 
public: 
    Circle(double r) : radius(r) {} 
 
    // Calculate the area for a circle 
    double area() const override { 
        return M_PI * radius * radius; 
    } 
}; 
 
class Rectangle : public Shape { 
private: 
    double length; 
    double width; 
 
public: 
    Rectangle(double l, double w) : length(l), width(w) {} 
 
    // Calculate the area for a rectangle 
    double area() const override { 
        return length * width; 
    } 
}; 
 
class Cube : public Shape { 
private: 
    double side; 
 
public: 
    Cube(double s) : side(s) {} 
 
    // Calculate the volume for a cube 
    double volume() const override { 
        return side * side * side; 
    } 
}; 
 
int main() { 
    Circle circle(4.0); 
    Rectangle rectangle(5.0, 3.0); 
    Cube cube(4.0); 
 
    std::cout << "Circle Area: " << circle.area() << std::endl; 
    std::cout << "Rectangle Area: " << rectangle.area() << std::endl; 
    std::cout << "Cube Volume: " << cube.volume() << std::endl; 
 
    return 0; 
} 

